
import java.util.ArrayList;
import consultoria.DatosProfesor;
import consultoria.LeerDatos;
import Consultas.Consultas;
import consultoria.SeccionActividadesCapacitacionFormal;
import java.io.IOException;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kenneth
 */
public class VentanaNombreProfesores extends javax.swing.JFrame {

    /**
     * Creates new form VentanaInformativaProfesores
     */
    public VentanaNombreProfesores() throws IOException, NoSuchMethodException, InvocationTargetException, IllegalAccessException {
        initComponents();
        this.prepararTabla();

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        TablaInformativa = new javax.swing.JTable();
        javax.swing.JButton BackPlanCarrera = new javax.swing.JButton();
        InformationButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Profesores");
        getContentPane().setLayout(null);

        TablaInformativa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TablaInformativa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Lista de profesores"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaInformativa.setRowHeight(25);
        TablaInformativa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaInformativaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaInformativa);
        TablaInformativa.getAccessibleContext().setAccessibleName("");

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(30, 10, 530, 550);

        BackPlanCarrera.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        BackPlanCarrera.setText("Volver");
        BackPlanCarrera.setToolTipText("");
        BackPlanCarrera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackPlanCarreraActionPerformed(evt);
            }
        });
        getContentPane().add(BackPlanCarrera);
        BackPlanCarrera.setBounds(240, 670, 105, 30);

        InformationButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        InformationButton.setText("Información del profesor");
        InformationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InformationButtonActionPerformed(evt);
            }
        });
        getContentPane().add(InformationButton);
        InformationButton.setBounds(30, 590, 240, 40);

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Plan de Capacitacion");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(320, 590, 240, 40);

        setSize(new java.awt.Dimension(596, 759));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BackPlanCarreraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackPlanCarreraActionPerformed
        this.dispose();
        new FrameProfesoresInteresadoEnCursos().setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_BackPlanCarreraActionPerformed

    private void InformationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InformationButtonActionPerformed
        
        if (TablaInformativa.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(null, "No hay ningún profesor seleccionado","Mensaje de error",JOptionPane.WARNING_MESSAGE);
    }
        else {
            int selectedRow = TablaInformativa.getSelectedRow();
            this.dispose();
            InformacionProfesor ventanaInformativa;
            try {
                ventanaInformativa = new InformacionProfesor(selectedRow);
                ventanaInformativa.setVisible(true);
            } catch (IOException ex) {
                Logger.getLogger(VentanaNombreProfesores.class.getName()).log(Level.SEVERE, null, ex);
            } catch (NoSuchMethodException ex) {
                Logger.getLogger(VentanaNombreProfesores.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvocationTargetException ex) {
                Logger.getLogger(VentanaNombreProfesores.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(VentanaNombreProfesores.class.getName()).log(Level.SEVERE, null, ex);
            }
            
                }
    }//GEN-LAST:event_InformationButtonActionPerformed

    private void TablaInformativaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaInformativaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_TablaInformativaMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (TablaInformativa.getSelectedRow() == -1) 
            JOptionPane.showMessageDialog(null, "No hay ningún profesor seleccionado","Mensaje de error",JOptionPane.WARNING_MESSAGE);
        else {
            int selectedRow = TablaInformativa.getSelectedRow();
            try {
                SeccionActividadesCapacitacionFormal.datosConsulturiaProfesor = LeerDatos.procesarBaseDatosExcel(selectedRow);
            } catch (IOException ex) {}
            boolean enco = SeccionActividadesCapacitacionFormal.verificarSiConsideraQueRequiereActividadesComoParteDeSuCapacitacionFormalProfesor();
            if(enco){
                this.dispose();
                try {
                    new PlanCapacitacion(selectedRow).setVisible(true);
                } catch (IOException ex) {}
            } else
                JOptionPane.showMessageDialog(null, "El profesor seleccionado no considera que requiere capacitación","Mensaje de informacion",JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaNombreProfesores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaNombreProfesores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaNombreProfesores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaNombreProfesores.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                VentanaNombreProfesores ventana;
                try {
                    ventana = new VentanaNombreProfesores();
                    ventana.setVisible(true);
                } catch (IOException | NoSuchMethodException | InvocationTargetException | IllegalAccessException ex) {
                    Logger.getLogger(VentanaNombreProfesores.class.getName()).log(Level.SEVERE, null, ex);
                }
                
  
            }
        });
    }
    private void prepararTabla() throws IOException, NoSuchMethodException, InvocationTargetException, IllegalAccessException{
        
        ArrayList<ArrayList<Object>> listaExtrema = new ArrayList<ArrayList<Object>>();
        Consultas consult = new Consultas();
        listaExtrema.add(consult.getDataByMethod("obtenerNombreProfesor"));
        DefaultTableModel modelo = (DefaultTableModel) TablaInformativa.getModel();
        
        System.out.println(listaExtrema.get(0).size());
        for (int i = 0; i < listaExtrema.get(0).size(); i++) {
            Vector row = new Vector();
            row.add(listaExtrema.get(0).get(i)); 
            modelo.addRow(row);
           
        }
       
        
        TablaInformativa.setModel(modelo);
    }

    
    


    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton InformationButton;
    private javax.swing.JTable TablaInformativa;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
